diff --git a/WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/Queues.java b/WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/Queues.java
index 5dc4d40..6e95e29 100644
--- a/WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/Queues.java
+++ b/WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/Queues.java
@@ -14,6 +14,9 @@ import java.util.TimerTask;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
+import java.util.concurrent.SynchronousQueue;
+import java.util.concurrent.ThreadPoolExecutor;
+import java.util.concurrent.TimeUnit;
 
 import org.apache.log4j.Logger;
 
@@ -36,6 +39,7 @@ public class Queues {
 	static Map<String, ExecutorService> queues = new HashMap<String,ExecutorService>();
 	static Map<Runnable, Future<?>> futures = new HashMap<Runnable, Future<?>>();
 	static List<Tuple<Runnable, String>> conditionedRunnables = new ArrayList<Tuple<Runnable, String>>();
+	static int cpus = Runtime.getRuntime().availableProcessors();
 	
 	// only one queue at the moment
 	static {
@@ -53,7 +57,13 @@ public class Queues {
 		queues.put( "single", e);
 		
 		// Jobs that need a thread very often and immediately use this one
-		e =  Executors.newCachedThreadPool();
+		// e =  Executors.newCachedThreadPool();
+		e = new ThreadPoolExecutor(
+			(16 * cpus), // core size
+			(64 * cpus), // max size
+			180, // idle timeout
+			TimeUnit.SECONDS,
+			new SynchronousQueue<Runnable>());
 		queues.put( "now", e);
 		
 		// something to check the conditioned tasks regularly
